{"version":3,"sources":["components/Header/Header.js","components/Banner/Banner.js","App.js","serviceWorker.js","index.js"],"names":["MenuExampleSecondary","state","activeItem","handleItemClick","e","_ref","name","_this","setState","this","react_default","a","createElement","Menu","secondary","Header","as","floated","style","marginTop","marginRight","Item","active","onClick","position","Input","icon","placeholder","Component","HeaderExampleFloating","Segment","clearing","Grid","columns","Row","Column","width","Header_MenuExampleSecondary","EmbedExampleYouTube","Embed","id","aspectRatio","source","CardExampleGroups","Card","Group","Content","Banner_EmbedExampleYouTube","extra","Description","App","Banner","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b25b26b4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Header, Segment, Menu, Input, Grid } from 'semantic-ui-react'\n\n\nclass MenuExampleSecondary extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu secondary>\n        <Menu.Header as='h2' floated='left' style={{ marginTop: 15, marginRight: 30 }}>\n          DJ-PAO Remix\n        </Menu.Header>\n        <Menu.Item\n          name='หน้าหลัก'\n          active={activeItem === 'หน้าหลัก'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='แพงใหม่ล่าสุด'\n          active={activeItem === 'แพงใหม่ล่าสุด'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='ติดต่องาน'\n          active={activeItem === 'ติดต่องาน'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <Input icon='search' placeholder='Search...' />\n          </Menu.Item>\n          <Menu.Item\n            name='logout'\n            active={activeItem === 'logout'}\n            onClick={this.handleItemClick}\n          />\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n\nconst HeaderExampleFloating = () => (\n  <Segment clearing>\n    <Grid columns={1}>\n      <Grid.Row>\n        <Grid.Column width={2} />\n        <Grid.Column width={12}>\n          <MenuExampleSecondary />\n        </Grid.Column>\n        <Grid.Column width={2} />\n      </Grid.Row>\n    </Grid>\n  </Segment>\n)\n\nexport default HeaderExampleFloating","import React from 'react'\nimport { Button, Card, Image, Embed } from 'semantic-ui-react'\n\nconst EmbedExampleYouTube = () => (\n  <Embed id='f832ih2ZEro' placeholder='https://i.ytimg.com/an_webp/f832ih2ZEro/mqdefault_6s.webp?du=3000&sqp=COqk2uAF&rs=AOn4CLDtjRLar9zpDfsvGkNFpXxnNnWtxw'  aspectRatio='4:3' source='youtube' />\n)\n\n\nconst CardExampleGroups = () => (\n  <Card.Group>\n    <Card>\n      <Card.Content>\n       <EmbedExampleYouTube />\n      </Card.Content>\n      <Card.Content extra>\n        <Card.Header>Header</Card.Header>\n        <Card.Description>Description</Card.Description>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n       <EmbedExampleYouTube />\n      </Card.Content>\n      <Card.Content extra>\n        <Card.Header>Header</Card.Header>\n        <Card.Description>Description</Card.Description>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n       <EmbedExampleYouTube />\n      </Card.Content>\n      <Card.Content extra>\n        <Card.Header>Header</Card.Header>\n        <Card.Description>Description</Card.Description>\n      </Card.Content>\n    </Card>\n  </Card.Group>\n)\n\nexport default CardExampleGroups","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Header } from './components/Header'\nimport { Banner } from './components/Banner'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Banner />\n        <Banner />\n        <Banner />\n        <Banner />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}